/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import static Frames.GenerarPedido.comboInstituto;
import static Frames.pedido_gral.dato_pedido;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import modelos.Conexion;
import modelos.Depto;
import modelos.Instituto;

/**
 *
 * @author alvar
 */
public class Nuevo_Servicio extends javax.swing.JFrame {

    /**
     * Creates new form Nuevo_Servicio
     */
    public Nuevo_Servicio() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/imagen/UTN.png")).getImage());//cambio ícono de barra de estado
        this.setLocationRelativeTo(null);//centra la ventana 
        //Lleno combobox "Instituto"
        
        Instituto cc = new Instituto();
        DefaultComboBoxModel modeloInst = new DefaultComboBoxModel(cc.mostrarInstitutos());
        comboInstituto.setModel(modeloInst);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        comboInstituto = new javax.swing.JComboBox<>();
        comboDepto = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(486, 260));

        jButton1.setFont(new java.awt.Font("Agency FB", 0, 18)); // NOI18N
        jButton1.setText("Validar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Agency FB", 0, 18)); // NOI18N
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Agency FB", 0, 18)); // NOI18N
        jLabel1.setText("Filtre por Instituto y Departamento y luego escriba el nombre del nuevo Servicio:");

        comboInstituto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar..." }));
        comboInstituto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboInstitutoItemStateChanged(evt);
            }
        });
        comboInstituto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboInstitutoActionPerformed(evt);
            }
        });

        comboDepto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        comboDepto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboDeptoItemStateChanged(evt);
            }
        });
        comboDepto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDeptoActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboInstituto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboDepto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 51, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(124, 124, 124)
                        .addComponent(jButton2)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(142, 142, 142))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(comboInstituto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboDepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addContainerGap(29, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Configuración abrir=new Configuración();//para abrir la ventana...
        abrir.setVisible(true);//...cuando apreto "Ingresar"
        dispose();//Cierro la ventana anterior
    }//GEN-LAST:event_jButton2ActionPerformed

    private void comboInstitutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboInstitutoItemStateChanged

        //Lleno el combobox Departamento a partir de la seleccion de Instituto con los datos de la BBDD
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            Instituto inst = (Instituto) comboInstituto.getSelectedItem();
            Depto depto = new Depto ();
            DefaultComboBoxModel modelDepto = new DefaultComboBoxModel(depto.mostrarDeptos(inst.getId_inst()));
            comboDepto.setModel(modelDepto);
        }
    }//GEN-LAST:event_comboInstitutoItemStateChanged

    private void comboInstitutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboInstitutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboInstitutoActionPerformed

    private void comboDeptoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboDeptoItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_comboDeptoItemStateChanged

    private void comboDeptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDeptoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboDeptoActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int seleccionI = comboInstituto.getSelectedIndex();
        int seleccionD = comboDepto.getSelectedIndex();
        int seleccionS = jTextField1.getText().length();
        boolean vacioI=comboInstituto.getSelectedItem().toString().isEmpty();
        boolean vacioD=comboDepto.getSelectedItem().toString().isEmpty();
        String inst=comboInstituto.getSelectedItem().toString();
        String dept=comboDepto.getSelectedItem().toString();
        String serv=jTextField1.getText().trim();//trim elimina espacios ingresados por error al principio y al final de la cadena
        
        if((seleccionI==0)||(seleccionD==0)||(seleccionS==0)||(vacioI==true)||(vacioD==true)){
            
        JOptionPane.showMessageDialog(null, "Faltan ítems...");
        }else{
            //Confirmación del usuario sobre los datos ingresados
        int confirmar= JOptionPane.showConfirmDialog(null, "¿Son correctos los datos ingresados?\n\n-Instituto: "+inst +"\n-Departamento: "+dept +"\n-Servicio NUEVO: "+serv , "Confirmar...", YES_NO_OPTION, 2);
        
        if ((confirmar == JOptionPane.YES_OPTION)){
            
            try{
                System.out.println("Instituto seleccionado: "+inst);
                System.out.println("Depto seleccionado: "+dept);
                PreparedStatement ps = null;
                ResultSet rs = null;
                Conexion conn = new Conexion();
                Connection con = conn.getConexion();
                
                /*//RESCATO ID del Instituto seleccionado
                String sqlI="";
                int id_inst=0;
                sqlI = "SELECT id_inst FROM aa1instituto WHERE n_inst = '"+inst+"'";
                ps = con.prepareStatement(sqlI);
                rs = ps.executeQuery();
                if(rs.next()){
                    id_inst = rs.getInt("id_inst");
                    System.out.println("Instituto buscado en base: "+id_inst);
                }*/
                
                //RESCATO ID del Depto seleccionado
                String sqlD="";
                int id_depto=0;
                sqlD = "SELECT id_depto FROM aa2depto WHERE n_depto = '"+dept+"'";
                ps = con.prepareStatement(sqlD);
                rs = ps.executeQuery();
                if(rs.next()){
                    id_depto = rs.getInt("id_depto");
                    System.out.println("Depto buscado en base: "+id_depto);
                }
                
                //RESCATO ID del último Servicio generado en la BBDD
                String sqlS="";
                int maxid_serv=0;
                sqlS = "SELECT id_serv from aa3servicio where id_serv = (select max(id_serv) from aa3servicio)";
                ps = con.prepareStatement(sqlS);
                rs = ps.executeQuery();
                if(rs.next()){  
                    maxid_serv = rs.getInt("id_serv");
                    System.out.println("Máximo id de servicio en base: "+maxid_serv);
                }
                
                //Creo el nuevo servicio en BBDD
                String sqlSnuevo="";
                int id_serNuevo = maxid_serv+1;
                sqlSnuevo = "Insert into aa3servicio (id_serv,id_depto1,n_servicio) values (?,?,?)";
                ps = con.prepareStatement(sqlSnuevo);
                ps.setInt(1, id_serNuevo);
                ps.setInt(2, id_depto);
                ps.setString(3, serv);
                int res = ps.executeUpdate();
                if (res>0){
                JOptionPane.showMessageDialog(null, "Servicio nuevo generado con éxito");
                comboInstituto.setEnabled(false);
                comboDepto.setEnabled(false);
                jTextField1.setEnabled(false);
                jButton1.setEnabled(false);
                jButton2.setText("Volver");
                } else{
                    JOptionPane.showMessageDialog(null, "ERROR en la generación del pedido. Consulte al administrador");
                }
                con.close();
            }
        catch(SQLException ex)
        {
            System.err.println(ex.toString());
        }
            
        /*
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
        
            //Ingreso los datos a la BBDD
            try {
                String sql = "insert into aa3servicio (nombre,instituto,depto,servicio,equipo,n_utn,obs,fecha,cierre) values (?,?,?,?,?,?,?,?,?)";
            ps = con.prepareStatement(sql);
            ps.setString(1, personal);
            } catch (Exception e) {
            }
        }*/
        }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Nuevo_Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Nuevo_Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Nuevo_Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Nuevo_Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Nuevo_Servicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboDepto;
    public static javax.swing.JComboBox<String> comboInstituto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
